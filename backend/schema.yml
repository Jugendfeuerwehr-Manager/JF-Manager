openapi: 3.0.3
info:
  title: JF-Manager API
  version: 1.0.0
  description: API documentation for the Jugendfeuerwehr Manager
paths:
  /api-token-auth/:
    post:
      operationId: api_token_auth_create
      tags:
      - api-token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/v1/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/verify/:
    post:
      operationId: auth_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/v1/event-types/:
    get:
      operationId: event_types_list
      summary: List all event types
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - event-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventTypeList'
          description: ''
    post:
      operationId: event_types_create
      summary: Create new event type
      tags:
      - event-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
  /api/v1/event-types/{id}/:
    get:
      operationId: event_types_retrieve
      summary: Get event type details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event type.
        required: true
      tags:
      - event-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
    put:
      operationId: event_types_update
      summary: Update event type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event type.
        required: true
      tags:
      - event-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
    patch:
      operationId: event_types_partial_update
      summary: Partially update event type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event type.
        required: true
      tags:
      - event-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
    delete:
      operationId: event_types_destroy
      summary: Delete event type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event type.
        required: true
      tags:
      - event-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/:
    get:
      operationId: events_list
      description: Get all member events
      summary: List all events
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: member
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: integer
      tags:
      - events
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: events_create
      summary: Create new event
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/{id}/:
    get:
      operationId: events_retrieve
      summary: Get event details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: events_update
      summary: Update event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: events_partial_update
      summary: Partially update event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: events_destroy
      summary: Delete event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/groups/:
    get:
      operationId: groups_list
      description: Get all member groups
      summary: List all groups
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: groups_create
      summary: Create new group
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}/:
    get:
      operationId: groups_retrieve
      summary: Get group details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Gruppe.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groups_update
      summary: Update group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Gruppe.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groups_partial_update
      summary: Partially update group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Gruppe.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groups_destroy
      summary: Delete group
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Gruppe.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/inventory/categories/:
    get:
      operationId: inventory_categories_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: inventory_categories_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/inventory/categories/{id}/:
    get:
      operationId: inventory_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Kategorie.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: inventory_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Kategorie.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: inventory_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Kategorie.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: inventory_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Kategorie.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/inventory/categories/{id}/items/:
    get:
      operationId: inventory_categories_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Kategorie.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/inventory/items/:
    get:
      operationId: inventory_items_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: is_variant_parent
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedItemList'
          description: ''
    post:
      operationId: inventory_items_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /api/v1/inventory/items/{id}/:
    get:
      operationId: inventory_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: inventory_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: inventory_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItemRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: inventory_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/inventory/items/{id}/stock/:
    get:
      operationId: inventory_items_stock_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /api/v1/inventory/items/{id}/variants/:
    get:
      operationId: inventory_items_variants_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /api/v1/inventory/items/search/:
    get:
      operationId: inventory_items_search_retrieve
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /api/v1/inventory/locations/:
    get:
      operationId: inventory_locations_list
      parameters:
      - in: query
        name: is_member
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: member
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: parent
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStorageLocationList'
          description: ''
    post:
      operationId: inventory_locations_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StorageLocationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StorageLocationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: ''
  /api/v1/inventory/locations/{id}/:
    get:
      operationId: inventory_locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Lagerort.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: ''
    put:
      operationId: inventory_locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Lagerort.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StorageLocationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StorageLocationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: ''
    patch:
      operationId: inventory_locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Lagerort.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStorageLocationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStorageLocationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStorageLocationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: ''
    delete:
      operationId: inventory_locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Lagerort.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/inventory/locations/{id}/stock/:
    get:
      operationId: inventory_locations_stock_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Lagerort.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: ''
  /api/v1/inventory/stocks/:
    get:
      operationId: inventory_stocks_list
      parameters:
      - in: query
        name: item
        schema:
          type: integer
      - in: query
        name: item_variant
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStockList'
          description: ''
  /api/v1/inventory/stocks/{id}/:
    get:
      operationId: inventory_stocks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestand.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
  /api/v1/inventory/transactions/:
    get:
      operationId: inventory_transactions_list
      parameters:
      - in: query
        name: item
        schema:
          type: integer
      - in: query
        name: item_variant
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: source
        schema:
          type: integer
      - in: query
        name: target
        schema:
          type: integer
      - in: query
        name: transaction_type
        schema:
          type: string
          title: Transaktionstyp
          enum:
          - DISCARD
          - IN
          - LOAN
          - MOVE
          - OUT
          - RETURN
        description: |-
          * `IN` - Eingang
          * `OUT` - Ausgang
          * `MOVE` - Umlagerung
          * `LOAN` - Ausleihe
          * `RETURN` - Rückgabe
          * `DISCARD` - Aussortierung
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactionList'
          description: ''
    post:
      operationId: inventory_transactions_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/v1/inventory/transactions/{id}/:
    get:
      operationId: inventory_transactions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transaktion.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    put:
      operationId: inventory_transactions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transaktion.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    patch:
      operationId: inventory_transactions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transaktion.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransactionRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    delete:
      operationId: inventory_transactions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transaktion.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/inventory/variants/:
    get:
      operationId: inventory_variants_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: parent_item
        schema:
          type: integer
      - in: query
        name: parent_item__category
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedItemVariantList'
          description: ''
    post:
      operationId: inventory_variants_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemVariantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemVariantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemVariantRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemVariant'
          description: ''
  /api/v1/inventory/variants/{id}/:
    get:
      operationId: inventory_variants_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel-Variante.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemVariant'
          description: ''
    put:
      operationId: inventory_variants_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel-Variante.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemVariantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemVariantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemVariantRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemVariant'
          description: ''
    patch:
      operationId: inventory_variants_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel-Variante.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItemVariantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItemVariantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItemVariantRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemVariant'
          description: ''
    delete:
      operationId: inventory_variants_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel-Variante.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/inventory/variants/{id}/stock/:
    get:
      operationId: inventory_variants_stock_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Artikel-Variante.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemVariant'
          description: ''
  /api/v1/members/:
    get:
      operationId: members_list
      description: Get a paginated list of all members with filtering and sorting
      summary: List all members
      parameters:
      - in: query
        name: canSwimm
        schema:
          type: boolean
      - in: query
        name: group
        schema:
          type: integer
        description: Filter by group ID
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Order by: name, lastname, birthday, joined'
      - in: query
        name: search
        schema:
          type: string
        description: Search by name, lastname, email
      - in: query
        name: status
        schema:
          type: integer
        description: Filter by status ID
      tags:
      - members
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMemberListList'
          description: ''
    post:
      operationId: members_create
      description: Create a new member
      summary: Create new member
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberCreateUpdateRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberCreateUpdate'
          description: ''
  /api/v1/members/{id}/:
    get:
      operationId: members_retrieve
      description: Get detailed information about a specific member
      summary: Get member details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
    put:
      operationId: members_update
      description: Update all member fields
      summary: Update member
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this member.
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberCreateUpdateRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberCreateUpdate'
          description: ''
    patch:
      operationId: members_partial_update
      description: Update specific member fields
      summary: Partially update member
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this member.
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMemberCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMemberCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMemberCreateUpdateRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberCreateUpdate'
          description: ''
    delete:
      operationId: members_destroy
      description: Delete a member
      summary: Delete member
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/members/{id}/events/:
    get:
      operationId: members_events_retrieve
      description: Get all events associated with this member
      summary: Get member's events
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/{id}/parents/:
    get:
      operationId: members_parents_retrieve
      description: Get all parents associated with this member
      summary: Get member's parents
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/statistics/:
    get:
      operationId: members_statistics_retrieve
      description: Get statistics about members (total, active, by status, etc.)
      summary: Get member statistics
      tags:
      - members
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/orders/:
    get:
      operationId: orders_list
      description: API Endpoint für Bestellungen
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: member
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order_date
        schema:
          type: string
          format: date-time
      - in: query
        name: ordered_by
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: orders_create
      description: API Endpoint für Bestellungen
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/orders/{id}/:
    get:
      operationId: orders_retrieve
      description: API Endpoint für Bestellungen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellung.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orders_update
      description: API Endpoint für Bestellungen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellung.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_partial_update
      description: API Endpoint für Bestellungen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellung.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_destroy
      description: API Endpoint für Bestellungen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellung.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/items/:
    get:
      operationId: orders_items_list
      description: API Endpoint für Bestellartikel
      parameters:
      - in: query
        name: item
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: size
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: integer
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderItemList'
          description: ''
    post:
      operationId: orders_items_create
      description: API Endpoint für Bestellartikel
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /api/v1/orders/items/{id}/:
    get:
      operationId: orders_items_retrieve
      description: API Endpoint für Bestellartikel
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellartikel.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    put:
      operationId: orders_items_update
      description: API Endpoint für Bestellartikel
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellartikel.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    patch:
      operationId: orders_items_partial_update
      description: API Endpoint für Bestellartikel
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellartikel.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderItemRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    delete:
      operationId: orders_items_destroy
      description: API Endpoint für Bestellartikel
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellartikel.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/orderable-items/:
    get:
      operationId: orders_orderable_items_list
      description: API Endpoint für bestellbare Artikel
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: has_sizes
        schema:
          type: boolean
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderableItemList'
          description: ''
    post:
      operationId: orders_orderable_items_create
      description: API Endpoint für bestellbare Artikel
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderableItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderableItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderableItemRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderableItem'
          description: ''
  /api/v1/orders/orderable-items/{id}/:
    get:
      operationId: orders_orderable_items_retrieve
      description: API Endpoint für bestellbare Artikel
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellbarer Artikel.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderableItem'
          description: ''
    put:
      operationId: orders_orderable_items_update
      description: API Endpoint für bestellbare Artikel
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellbarer Artikel.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderableItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderableItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderableItemRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderableItem'
          description: ''
    patch:
      operationId: orders_orderable_items_partial_update
      description: API Endpoint für bestellbare Artikel
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellbarer Artikel.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderableItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderableItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderableItemRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderableItem'
          description: ''
    delete:
      operationId: orders_orderable_items_destroy
      description: API Endpoint für bestellbare Artikel
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellbarer Artikel.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/statuses/:
    get:
      operationId: orders_statuses_list
      description: API Endpoint für Bestellstatus
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderStatusList'
          description: ''
    post:
      operationId: orders_statuses_create
      description: API Endpoint für Bestellstatus
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderStatusRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          description: ''
  /api/v1/orders/statuses/{id}/:
    get:
      operationId: orders_statuses_retrieve
      description: API Endpoint für Bestellstatus
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellstatus.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          description: ''
    put:
      operationId: orders_statuses_update
      description: API Endpoint für Bestellstatus
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellstatus.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderStatusRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          description: ''
    patch:
      operationId: orders_statuses_partial_update
      description: API Endpoint für Bestellstatus
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellstatus.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderStatusRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          description: ''
    delete:
      operationId: orders_statuses_destroy
      description: API Endpoint für Bestellstatus
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bestellstatus.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/parents/:
    get:
      operationId: parents_list
      description: Get a paginated list of all parents
      summary: List all parents
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - parents
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParentList'
          description: ''
    post:
      operationId: parents_create
      description: Create a new parent
      summary: Create new parent
      tags:
      - parents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParentRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parent'
          description: ''
  /api/v1/parents/{id}/:
    get:
      operationId: parents_retrieve
      description: Get detailed information about a specific parent
      summary: Get parent details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this parent.
        required: true
      tags:
      - parents
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parent'
          description: ''
    put:
      operationId: parents_update
      description: Update all parent fields
      summary: Update parent
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this parent.
        required: true
      tags:
      - parents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParentRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parent'
          description: ''
    patch:
      operationId: parents_partial_update
      description: Update specific parent fields
      summary: Partially update parent
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this parent.
        required: true
      tags:
      - parents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedParentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedParentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedParentRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parent'
          description: ''
    delete:
      operationId: parents_destroy
      description: Delete a parent
      summary: Delete parent
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this parent.
        required: true
      tags:
      - parents
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/qualifications/:
    get:
      operationId: qualifications_list
      description: ViewSet für Qualifikationen
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: member
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: integer
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - qualifications
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQualificationList'
          description: ''
    post:
      operationId: qualifications_create
      description: ViewSet für Qualifikationen
      tags:
      - qualifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualificationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
          description: ''
  /api/v1/qualifications/{id}/:
    get:
      operationId: qualifications_retrieve
      description: ViewSet für Qualifikationen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Qualifikation.
        required: true
      tags:
      - qualifications
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
          description: ''
    put:
      operationId: qualifications_update
      description: ViewSet für Qualifikationen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Qualifikation.
        required: true
      tags:
      - qualifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualificationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
          description: ''
    patch:
      operationId: qualifications_partial_update
      description: ViewSet für Qualifikationen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Qualifikation.
        required: true
      tags:
      - qualifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQualificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQualificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQualificationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
          description: ''
    delete:
      operationId: qualifications_destroy
      description: ViewSet für Qualifikationen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Qualifikation.
        required: true
      tags:
      - qualifications
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/qualifications/types/:
    get:
      operationId: qualifications_types_list
      description: ViewSet für Qualifikationstypen
      parameters:
      - in: query
        name: expires
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - qualifications
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQualificationTypeList'
          description: ''
    post:
      operationId: qualifications_types_create
      description: ViewSet für Qualifikationstypen
      tags:
      - qualifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualificationTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualificationTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualificationTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationType'
          description: ''
  /api/v1/qualifications/types/{id}/:
    get:
      operationId: qualifications_types_retrieve
      description: ViewSet für Qualifikationstypen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Qualifikationstyp.
        required: true
      tags:
      - qualifications
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationType'
          description: ''
    put:
      operationId: qualifications_types_update
      description: ViewSet für Qualifikationstypen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Qualifikationstyp.
        required: true
      tags:
      - qualifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualificationTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualificationTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualificationTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationType'
          description: ''
    patch:
      operationId: qualifications_types_partial_update
      description: ViewSet für Qualifikationstypen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Qualifikationstyp.
        required: true
      tags:
      - qualifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQualificationTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQualificationTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQualificationTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationType'
          description: ''
    delete:
      operationId: qualifications_types_destroy
      description: ViewSet für Qualifikationstypen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Qualifikationstyp.
        required: true
      tags:
      - qualifications
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/servicebook/attandances/:
    get:
      operationId: servicebook_attandances_list
      description: |-
        API Endpoint that allows Attandance to be viewed or edited - nur für authentifizierte und berechtigte Benutzer

        search is indexed to person name and lastname
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: person
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: service
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: string
          nullable: true
          enum:
          - A
          - E
          - F
        description: |-
          * `A` - Anwesend
          * `E` - Entschuldigt
          * `F` - Fehlend
      tags:
      - servicebook
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceList'
          description: ''
    post:
      operationId: servicebook_attandances_create
      description: |-
        API Endpoint that allows Attandance to be viewed or edited - nur für authentifizierte und berechtigte Benutzer

        search is indexed to person name and lastname
      tags:
      - servicebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /api/v1/servicebook/attandances/{id}/:
    get:
      operationId: servicebook_attandances_retrieve
      description: |-
        API Endpoint that allows Attandance to be viewed or edited - nur für authentifizierte und berechtigte Benutzer

        search is indexed to person name and lastname
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance.
        required: true
      tags:
      - servicebook
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    put:
      operationId: servicebook_attandances_update
      description: |-
        API Endpoint that allows Attandance to be viewed or edited - nur für authentifizierte und berechtigte Benutzer

        search is indexed to person name and lastname
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance.
        required: true
      tags:
      - servicebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    patch:
      operationId: servicebook_attandances_partial_update
      description: |-
        API Endpoint that allows Attandance to be viewed or edited - nur für authentifizierte und berechtigte Benutzer

        search is indexed to person name and lastname
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance.
        required: true
      tags:
      - servicebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    delete:
      operationId: servicebook_attandances_destroy
      description: |-
        API Endpoint that allows Attandance to be viewed or edited - nur für authentifizierte und berechtigte Benutzer

        search is indexed to person name and lastname
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance.
        required: true
      tags:
      - servicebook
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/servicebook/services/:
    get:
      operationId: servicebook_services_list
      description: API Endpoint that allows Service to be viewed or edited - nur für
        authentifizierte und berechtigte Benutzer
      parameters:
      - in: query
        name: attendees
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: end
        schema:
          type: string
          format: date-time
      - in: query
        name: events
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operations_manager
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: place
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start
        schema:
          type: string
          format: date-time
      - in: query
        name: topic
        schema:
          type: string
      tags:
      - servicebook
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceList'
          description: ''
    post:
      operationId: servicebook_services_create
      description: API Endpoint that allows Service to be viewed or edited - nur für
        authentifizierte und berechtigte Benutzer
      tags:
      - servicebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/v1/servicebook/services/{id}/:
    get:
      operationId: servicebook_services_retrieve
      description: API Endpoint that allows Service to be viewed or edited - nur für
        authentifizierte und berechtigte Benutzer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - servicebook
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    put:
      operationId: servicebook_services_update
      description: API Endpoint that allows Service to be viewed or edited - nur für
        authentifizierte und berechtigte Benutzer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - servicebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    patch:
      operationId: servicebook_services_partial_update
      description: API Endpoint that allows Service to be viewed or edited - nur für
        authentifizierte und berechtigte Benutzer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - servicebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    delete:
      operationId: servicebook_services_destroy
      description: API Endpoint that allows Service to be viewed or edited - nur für
        authentifizierte und berechtigte Benutzer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - servicebook
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/settings/:
    get:
      operationId: settings_retrieve
      description: Get public application settings like app name, contact emails,
        etc.
      summary: Get application settings
      tags:
      - settings
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/specialtasks/:
    get:
      operationId: specialtasks_list
      description: ViewSet für Sonderaufgaben
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: member
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: task
        schema:
          type: integer
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - specialtasks
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSpecialTaskList'
          description: ''
    post:
      operationId: specialtasks_create
      description: ViewSet für Sonderaufgaben
      tags:
      - specialtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpecialTaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpecialTaskRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTask'
          description: ''
  /api/v1/specialtasks/{id}/:
    get:
      operationId: specialtasks_retrieve
      description: ViewSet für Sonderaufgaben
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sonderaufgabe.
        required: true
      tags:
      - specialtasks
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTask'
          description: ''
    put:
      operationId: specialtasks_update
      description: ViewSet für Sonderaufgaben
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sonderaufgabe.
        required: true
      tags:
      - specialtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpecialTaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpecialTaskRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTask'
          description: ''
    patch:
      operationId: specialtasks_partial_update
      description: ViewSet für Sonderaufgaben
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sonderaufgabe.
        required: true
      tags:
      - specialtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSpecialTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSpecialTaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSpecialTaskRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTask'
          description: ''
    delete:
      operationId: specialtasks_destroy
      description: ViewSet für Sonderaufgaben
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sonderaufgabe.
        required: true
      tags:
      - specialtasks
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/specialtasks/types/:
    get:
      operationId: specialtasks_types_list
      description: ViewSet für Sonderaufgaben-Typen
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - specialtasks
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSpecialTaskTypeList'
          description: ''
    post:
      operationId: specialtasks_types_create
      description: ViewSet für Sonderaufgaben-Typen
      tags:
      - specialtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialTaskTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpecialTaskTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpecialTaskTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTaskType'
          description: ''
  /api/v1/specialtasks/types/{id}/:
    get:
      operationId: specialtasks_types_retrieve
      description: ViewSet für Sonderaufgaben-Typen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sonderaufgaben-Typ.
        required: true
      tags:
      - specialtasks
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTaskType'
          description: ''
    put:
      operationId: specialtasks_types_update
      description: ViewSet für Sonderaufgaben-Typen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sonderaufgaben-Typ.
        required: true
      tags:
      - specialtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialTaskTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpecialTaskTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpecialTaskTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTaskType'
          description: ''
    patch:
      operationId: specialtasks_types_partial_update
      description: ViewSet für Sonderaufgaben-Typen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sonderaufgaben-Typ.
        required: true
      tags:
      - specialtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSpecialTaskTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSpecialTaskTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSpecialTaskTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTaskType'
          description: ''
    delete:
      operationId: specialtasks_types_destroy
      description: ViewSet für Sonderaufgaben-Typen
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sonderaufgaben-Typ.
        required: true
      tags:
      - specialtasks
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/statuses/:
    get:
      operationId: statuses_list
      description: Get all member statuses
      summary: List all statuses
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - statuses
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatusList'
          description: ''
    post:
      operationId: statuses_create
      summary: Create new status
      tags:
      - statuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/v1/statuses/{id}/:
    get:
      operationId: statuses_retrieve
      summary: Get status details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Status.
        required: true
      tags:
      - statuses
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: statuses_update
      summary: Update status
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Status.
        required: true
      tags:
      - statuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: statuses_partial_update
      summary: Partially update status
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Status.
        required: true
      tags:
      - statuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatusRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: statuses_destroy
      summary: Delete status
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Status.
        required: true
      tags:
      - statuses
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/userinfo/:
    get:
      operationId: userinfo_retrieve
      description: Get public application settings like app name, contact emails,
        etc.
      summary: Get application settings
      tags:
      - userinfo
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/users/:
    get:
      operationId: users_list
      description: Get a paginated list of all users
      summary: List all users
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: users_retrieve
      description: Get detailed information about a specific user
      summary: Get user details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Benutzer.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
    patch:
      operationId: users_partial_update
      description: Update specific user fields
      summary: Partially update user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Benutzer.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/me/:
    get:
      operationId: users_me_retrieve
      description: Get complete information about the currently authenticated user
        including permissions and groups
      summary: Get current user info
      tags:
      - users
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
  /members/members.xlsx:
    get:
      operationId: members_members.xlsx_retrieve
      description: API Endpoint für Mitglieder-Export als Excel - nur für authentifizierte
        und berechtigte Benutzer
      tags:
      - members
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    Attendance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        state:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/StateEnum'
          - $ref: '#/components/schemas/NullEnum'
        person:
          type: integer
          nullable: true
        service:
          type: integer
          nullable: true
      required:
      - id
    AttendanceRequest:
      type: object
      properties:
        state:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/StateEnum'
          - $ref: '#/components/schemas/NullEnum'
        person:
          type: integer
          nullable: true
        service:
          type: integer
          nullable: true
    AuthToken:
      type: object
      properties:
        token:
          type: string
          readOnly: true
      required:
      - token
    AuthTokenRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
          title: Benutzername
        password:
          type: string
          writeOnly: true
          minLength: 1
          title: Passwort
      required:
      - password
      - username
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        schema:
          nullable: true
          description: 'Variable Attribute pro Kategorie (z.B. {"größe": "string",
            "farbe": "string"})'
        item_count:
          type: integer
          readOnly: true
      required:
      - id
      - item_count
      - name
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        schema:
          nullable: true
          description: 'Variable Attribute pro Kategorie (z.B. {"größe": "string",
            "farbe": "string"})'
      required:
      - name
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        member:
          type: integer
          nullable: true
        member_name:
          type: string
          readOnly: true
        type:
          type: integer
          nullable: true
        event_type:
          allOf:
          - $ref: '#/components/schemas/EventType'
          readOnly: true
        datetime:
          type: string
          format: date
          title: Datum
        notes:
          type: string
          title: Bemerkungen
      required:
      - datetime
      - event_type
      - id
      - member_name
    EventRequest:
      type: object
      properties:
        member:
          type: integer
          nullable: true
        type:
          type: integer
          nullable: true
        type_id:
          type: integer
          writeOnly: true
        datetime:
          type: string
          format: date
          title: Datum
        notes:
          type: string
          title: Bemerkungen
      required:
      - datetime
    EventType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Ereignistyp
          maxLength: 200
      required:
      - id
    EventTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Ereignistyp
          maxLength: 200
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Gruppenname
          maxLength: 200
      required:
      - id
    GroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Gruppenname
          maxLength: 200
    Item:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        category:
          type: integer
          nullable: true
          title: Kategorie
        category_name:
          type: string
          readOnly: true
        base_unit:
          type: string
          title: Grundeinheit
          maxLength: 50
        attributes:
          nullable: true
          title: Basis-Attribute
          description: 'Grundlegende Attribute des Artikels (z.B. {"marke": "Adidas",
            "typ": "Hose"})'
        is_variant_parent:
          type: boolean
          title: Hat Varianten
          description: Markieren Sie dies, wenn dieser Artikel Varianten hat (z.B.
            verschiedene Größen)
        size:
          type: string
          title: 'Größe '
          maxLength: 100
        identifier1:
          type: string
          title: Inventarnummer Hand
          maxLength: 255
        identifier2:
          type: string
          title: Inventarnummer Barcode
          maxLength: 255
        rented_by:
          type: integer
          nullable: true
          title: Ausgeliehen von
        total_stock:
          type: integer
          readOnly: true
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ItemVariant'
          readOnly: true
      required:
      - category_name
      - id
      - total_stock
      - variants
    ItemRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        category:
          type: integer
          nullable: true
          title: Kategorie
        base_unit:
          type: string
          minLength: 1
          title: Grundeinheit
          maxLength: 50
        attributes:
          nullable: true
          title: Basis-Attribute
          description: 'Grundlegende Attribute des Artikels (z.B. {"marke": "Adidas",
            "typ": "Hose"})'
        is_variant_parent:
          type: boolean
          title: Hat Varianten
          description: Markieren Sie dies, wenn dieser Artikel Varianten hat (z.B.
            verschiedene Größen)
        size:
          type: string
          title: 'Größe '
          maxLength: 100
        identifier1:
          type: string
          title: Inventarnummer Hand
          maxLength: 255
        identifier2:
          type: string
          title: Inventarnummer Barcode
          maxLength: 255
        rented_by:
          type: integer
          nullable: true
          title: Ausgeliehen von
    ItemVariant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        parent_item:
          type: integer
          title: Hauptartikel
        parent_item_name:
          type: string
          readOnly: true
        category_id:
          type: integer
          readOnly: true
        category_name:
          type: string
          readOnly: true
        sku:
          type: string
          title: SKU/Artikelnummer
          description: Eindeutige Artikelnummer für diese Variante
          maxLength: 100
        variant_attributes:
          title: Varianten-Attribute
          description: 'Spezifische Attribute dieser Variante (z.B. {"größe": "164",
            "farbe": "blau"})'
        total_stock:
          type: integer
          readOnly: true
      required:
      - category_id
      - category_name
      - id
      - parent_item
      - parent_item_name
      - total_stock
      - variant_attributes
    ItemVariantRequest:
      type: object
      properties:
        parent_item:
          type: integer
          title: Hauptartikel
        sku:
          type: string
          title: SKU/Artikelnummer
          description: Eindeutige Artikelnummer für diese Variante
          maxLength: 100
        variant_attributes:
          title: Varianten-Attribute
          description: 'Spezifische Attribute dieser Variante (z.B. {"größe": "164",
            "farbe": "blau"})'
      required:
      - parent_item
      - variant_attributes
    MemberCreateUpdate:
      type: object
      description: Serializer for create/update operations
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        lastname:
          type: string
          title: Nachname
          maxLength: 200
        birthday:
          type: string
          format: date
          nullable: true
          title: Geburtstag
        email:
          type: string
          title: E-Mail
          maxLength: 200
        street:
          type: string
          title: Straße
          maxLength: 200
        zip_code:
          type: string
          title: PLZ
          maxLength: 200
        city:
          type: string
          title: Stadt / Ort
          maxLength: 200
        phone:
          type: string
          title: Telefon
          maxLength: 200
        mobile:
          type: string
          title: Mobil
          maxLength: 200
        notes:
          type: string
          title: Bemerkungen
        joined:
          type: string
          format: date
          nullable: true
          title: Eingetreten
        identityCardNumber:
          type: string
          title: Ausweis Nr.
          maxLength: 50
        canSwimm:
          type: boolean
          title: Kann schwimmen
        status:
          type: integer
          nullable: true
        group:
          type: integer
          nullable: true
        storage_location:
          type: integer
          nullable: true
          title: Lagerplatz
        avatar:
          type: string
          format: uri
          nullable: true
          title: Ausweisbild
      required:
      - id
    MemberCreateUpdateRequest:
      type: object
      description: Serializer for create/update operations
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        lastname:
          type: string
          minLength: 1
          title: Nachname
          maxLength: 200
        birthday:
          type: string
          format: date
          nullable: true
          title: Geburtstag
        email:
          type: string
          title: E-Mail
          maxLength: 200
        street:
          type: string
          title: Straße
          maxLength: 200
        zip_code:
          type: string
          title: PLZ
          maxLength: 200
        city:
          type: string
          title: Stadt / Ort
          maxLength: 200
        phone:
          type: string
          title: Telefon
          maxLength: 200
        mobile:
          type: string
          title: Mobil
          maxLength: 200
        notes:
          type: string
          title: Bemerkungen
        joined:
          type: string
          format: date
          nullable: true
          title: Eingetreten
        identityCardNumber:
          type: string
          title: Ausweis Nr.
          maxLength: 50
        canSwimm:
          type: boolean
          title: Kann schwimmen
        status:
          type: integer
          nullable: true
        group:
          type: integer
          nullable: true
        storage_location:
          type: integer
          nullable: true
          title: Lagerplatz
        avatar:
          type: string
          format: binary
          nullable: true
          title: Ausweisbild
    MemberDetail:
      type: object
      description: Detailed serializer for single member views
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        lastname:
          type: string
          title: Nachname
          maxLength: 200
        full_name:
          type: string
          readOnly: true
        birthday:
          type: string
          format: date
          nullable: true
          title: Geburtstag
        age:
          type: integer
          readOnly: true
        email:
          type: string
          title: E-Mail
          maxLength: 200
        street:
          type: string
          title: Straße
          maxLength: 200
        zip_code:
          type: string
          title: PLZ
          maxLength: 200
        city:
          type: string
          title: Stadt / Ort
          maxLength: 200
        phone:
          type: string
          title: Telefon
          maxLength: 200
        mobile:
          type: string
          title: Mobil
          maxLength: 200
        notes:
          type: string
          title: Bemerkungen
        joined:
          type: string
          format: date
          nullable: true
          title: Eingetreten
        identityCardNumber:
          type: string
          title: Ausweis Nr.
          maxLength: 50
        canSwimm:
          type: boolean
          title: Kann schwimmen
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          readOnly: true
        group:
          allOf:
          - $ref: '#/components/schemas/Group'
          readOnly: true
        storage_location:
          type: integer
          nullable: true
          title: Lagerplatz
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Parent'
          readOnly: true
        avatar:
          type: string
          format: uri
          nullable: true
          title: Ausweisbild
        avatar_url:
          type: string
          readOnly: true
      required:
      - age
      - avatar_url
      - full_name
      - group
      - id
      - parents
      - status
    MemberList:
      type: object
      description: Lightweight serializer for list views
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        lastname:
          type: string
          title: Nachname
          maxLength: 200
        full_name:
          type: string
          readOnly: true
        birthday:
          type: string
          format: date
          nullable: true
          title: Geburtstag
        age:
          type: integer
          readOnly: true
        email:
          type: string
          title: E-Mail
          maxLength: 200
        phone:
          type: string
          title: Telefon
          maxLength: 200
        mobile:
          type: string
          title: Mobil
          maxLength: 200
        city:
          type: string
          title: Stadt / Ort
          maxLength: 200
        joined:
          type: string
          format: date
          nullable: true
          title: Eingetreten
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          readOnly: true
        group:
          allOf:
          - $ref: '#/components/schemas/Group'
          readOnly: true
        avatar_url:
          type: string
          readOnly: true
      required:
      - age
      - avatar_url
      - full_name
      - group
      - id
      - status
    NullEnum:
      enum:
      - null
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        member_name:
          type: string
          readOnly: true
        ordered_by_name:
          type: string
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        order_date:
          type: string
          format: date-time
          readOnly: true
          title: Bestelldatum
        notes:
          type: string
          title: Bemerkungen
        member:
          type: integer
          title: Mitglied
        ordered_by:
          type: integer
          nullable: true
          title: Bestellt von
      required:
      - id
      - items
      - member
      - member_name
      - order_date
      - ordered_by_name
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        item_name:
          type: string
          readOnly: true
        status_name:
          type: string
          title: Status Name
          readOnly: true
        status_color:
          type: string
          title: Farbe
          description: Hex-Farbcode für die Anzeige
          readOnly: true
        size:
          type: string
          title: Größe
          maxLength: 50
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Anzahl
        received_date:
          type: string
          format: date-time
          nullable: true
          title: Eingangsdatum
        delivered_date:
          type: string
          format: date-time
          nullable: true
          title: Ausgabedatum
        notes:
          type: string
          title: Bemerkungen
        order:
          type: integer
          title: Bestellung
        item:
          type: integer
          title: Artikel
        status:
          type: integer
      required:
      - id
      - item
      - item_name
      - order
      - status
      - status_color
      - status_name
    OrderItemRequest:
      type: object
      properties:
        size:
          type: string
          title: Größe
          maxLength: 50
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Anzahl
        received_date:
          type: string
          format: date-time
          nullable: true
          title: Eingangsdatum
        delivered_date:
          type: string
          format: date-time
          nullable: true
          title: Ausgabedatum
        notes:
          type: string
          title: Bemerkungen
        order:
          type: integer
          title: Bestellung
        item:
          type: integer
          title: Artikel
        status:
          type: integer
      required:
      - item
      - order
      - status
    OrderRequest:
      type: object
      properties:
        notes:
          type: string
          title: Bemerkungen
        member:
          type: integer
          title: Mitglied
        ordered_by:
          type: integer
          nullable: true
          title: Bestellt von
      required:
      - member
    OrderStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Status Name
          maxLength: 100
        code:
          type: string
          title: Status Code
          maxLength: 20
        description:
          type: string
          title: Beschreibung
        color:
          type: string
          title: Farbe
          description: Hex-Farbcode für die Anzeige
          maxLength: 7
        is_active:
          type: boolean
          title: Aktiv
        sort_order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Sortierung
      required:
      - code
      - id
      - name
    OrderStatusRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Status Name
          maxLength: 100
        code:
          type: string
          minLength: 1
          title: Status Code
          maxLength: 20
        description:
          type: string
          title: Beschreibung
        color:
          type: string
          minLength: 1
          title: Farbe
          description: Hex-Farbcode für die Anzeige
          maxLength: 7
        is_active:
          type: boolean
          title: Aktiv
        sort_order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Sortierung
      required:
      - code
      - name
    OrderableItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sizes_list:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        category:
          type: string
          title: Kategorie
          maxLength: 100
        description:
          type: string
          title: Beschreibung
        has_sizes:
          type: boolean
          title: Hat Größen
        available_sizes:
          type: string
          title: Verfügbare Größen
          description: 'Größen kommagetrennt eingeben, z.B.: XS,S,M,L,XL oder 98,104,110,116'
        is_active:
          type: boolean
          title: Aktiv
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - created_at
      - id
      - name
      - sizes_list
      - updated_at
    OrderableItemRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        category:
          type: string
          minLength: 1
          title: Kategorie
          maxLength: 100
        description:
          type: string
          title: Beschreibung
        has_sizes:
          type: boolean
          title: Hat Größen
        available_sizes:
          type: string
          title: Verfügbare Größen
          description: 'Größen kommagetrennt eingeben, z.B.: XS,S,M,L,XL oder 98,104,110,116'
        is_active:
          type: boolean
          title: Aktiv
      required:
      - category
      - name
    PaginatedAttendanceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Attendance'
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedEventList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedEventTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
    PaginatedGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    PaginatedItemVariantList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ItemVariant'
    PaginatedMemberListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MemberList'
    PaginatedOrderItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedOrderStatusList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderStatus'
    PaginatedOrderableItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderableItem'
    PaginatedParentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Parent'
    PaginatedQualificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Qualification'
    PaginatedQualificationTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/QualificationType'
    PaginatedServiceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    PaginatedSpecialTaskList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SpecialTask'
    PaginatedSpecialTaskTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SpecialTaskType'
    PaginatedStatusList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Status'
    PaginatedStockList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Stock'
    PaginatedStorageLocationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StorageLocation'
    PaginatedTransactionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Parent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        lastname:
          type: string
          title: Nachname
          maxLength: 200
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          title: E-Mail 1
          maxLength: 200
        email2:
          type: string
          title: E-Mail 2
          maxLength: 200
        phone:
          type: string
          title: Telefon
          maxLength: 200
        mobile:
          type: string
          title: Mobil
          maxLength: 200
        street:
          type: string
          title: Straße
          maxLength: 200
        zip_code:
          type: string
          title: PLZ
          maxLength: 200
        city:
          type: string
          title: Stadt / Ort
          maxLength: 200
        notes:
          type: string
          title: Bemerkungen
        children:
          type: array
          items:
            type: integer
      required:
      - full_name
      - id
    ParentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        lastname:
          type: string
          minLength: 1
          title: Nachname
          maxLength: 200
        email:
          type: string
          title: E-Mail 1
          maxLength: 200
        email2:
          type: string
          title: E-Mail 2
          maxLength: 200
        phone:
          type: string
          title: Telefon
          maxLength: 200
        mobile:
          type: string
          title: Mobil
          maxLength: 200
        street:
          type: string
          title: Straße
          maxLength: 200
        zip_code:
          type: string
          title: PLZ
          maxLength: 200
        city:
          type: string
          title: Stadt / Ort
          maxLength: 200
        notes:
          type: string
          title: Bemerkungen
        children:
          type: array
          items:
            type: integer
    PatchedAttendanceRequest:
      type: object
      properties:
        state:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/StateEnum'
          - $ref: '#/components/schemas/NullEnum'
        person:
          type: integer
          nullable: true
        service:
          type: integer
          nullable: true
    PatchedCategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        schema:
          nullable: true
          description: 'Variable Attribute pro Kategorie (z.B. {"größe": "string",
            "farbe": "string"})'
    PatchedEventRequest:
      type: object
      properties:
        member:
          type: integer
          nullable: true
        type:
          type: integer
          nullable: true
        type_id:
          type: integer
          writeOnly: true
        datetime:
          type: string
          format: date
          title: Datum
        notes:
          type: string
          title: Bemerkungen
    PatchedEventTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Ereignistyp
          maxLength: 200
    PatchedGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Gruppenname
          maxLength: 200
    PatchedItemRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        category:
          type: integer
          nullable: true
          title: Kategorie
        base_unit:
          type: string
          minLength: 1
          title: Grundeinheit
          maxLength: 50
        attributes:
          nullable: true
          title: Basis-Attribute
          description: 'Grundlegende Attribute des Artikels (z.B. {"marke": "Adidas",
            "typ": "Hose"})'
        is_variant_parent:
          type: boolean
          title: Hat Varianten
          description: Markieren Sie dies, wenn dieser Artikel Varianten hat (z.B.
            verschiedene Größen)
        size:
          type: string
          title: 'Größe '
          maxLength: 100
        identifier1:
          type: string
          title: Inventarnummer Hand
          maxLength: 255
        identifier2:
          type: string
          title: Inventarnummer Barcode
          maxLength: 255
        rented_by:
          type: integer
          nullable: true
          title: Ausgeliehen von
    PatchedItemVariantRequest:
      type: object
      properties:
        parent_item:
          type: integer
          title: Hauptartikel
        sku:
          type: string
          title: SKU/Artikelnummer
          description: Eindeutige Artikelnummer für diese Variante
          maxLength: 100
        variant_attributes:
          title: Varianten-Attribute
          description: 'Spezifische Attribute dieser Variante (z.B. {"größe": "164",
            "farbe": "blau"})'
    PatchedMemberCreateUpdateRequest:
      type: object
      description: Serializer for create/update operations
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        lastname:
          type: string
          minLength: 1
          title: Nachname
          maxLength: 200
        birthday:
          type: string
          format: date
          nullable: true
          title: Geburtstag
        email:
          type: string
          title: E-Mail
          maxLength: 200
        street:
          type: string
          title: Straße
          maxLength: 200
        zip_code:
          type: string
          title: PLZ
          maxLength: 200
        city:
          type: string
          title: Stadt / Ort
          maxLength: 200
        phone:
          type: string
          title: Telefon
          maxLength: 200
        mobile:
          type: string
          title: Mobil
          maxLength: 200
        notes:
          type: string
          title: Bemerkungen
        joined:
          type: string
          format: date
          nullable: true
          title: Eingetreten
        identityCardNumber:
          type: string
          title: Ausweis Nr.
          maxLength: 50
        canSwimm:
          type: boolean
          title: Kann schwimmen
        status:
          type: integer
          nullable: true
        group:
          type: integer
          nullable: true
        storage_location:
          type: integer
          nullable: true
          title: Lagerplatz
        avatar:
          type: string
          format: binary
          nullable: true
          title: Ausweisbild
    PatchedOrderItemRequest:
      type: object
      properties:
        size:
          type: string
          title: Größe
          maxLength: 50
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Anzahl
        received_date:
          type: string
          format: date-time
          nullable: true
          title: Eingangsdatum
        delivered_date:
          type: string
          format: date-time
          nullable: true
          title: Ausgabedatum
        notes:
          type: string
          title: Bemerkungen
        order:
          type: integer
          title: Bestellung
        item:
          type: integer
          title: Artikel
        status:
          type: integer
    PatchedOrderRequest:
      type: object
      properties:
        notes:
          type: string
          title: Bemerkungen
        member:
          type: integer
          title: Mitglied
        ordered_by:
          type: integer
          nullable: true
          title: Bestellt von
    PatchedOrderStatusRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Status Name
          maxLength: 100
        code:
          type: string
          minLength: 1
          title: Status Code
          maxLength: 20
        description:
          type: string
          title: Beschreibung
        color:
          type: string
          minLength: 1
          title: Farbe
          description: Hex-Farbcode für die Anzeige
          maxLength: 7
        is_active:
          type: boolean
          title: Aktiv
        sort_order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Sortierung
    PatchedOrderableItemRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        category:
          type: string
          minLength: 1
          title: Kategorie
          maxLength: 100
        description:
          type: string
          title: Beschreibung
        has_sizes:
          type: boolean
          title: Hat Größen
        available_sizes:
          type: string
          title: Verfügbare Größen
          description: 'Größen kommagetrennt eingeben, z.B.: XS,S,M,L,XL oder 98,104,110,116'
        is_active:
          type: boolean
          title: Aktiv
    PatchedParentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        lastname:
          type: string
          minLength: 1
          title: Nachname
          maxLength: 200
        email:
          type: string
          title: E-Mail 1
          maxLength: 200
        email2:
          type: string
          title: E-Mail 2
          maxLength: 200
        phone:
          type: string
          title: Telefon
          maxLength: 200
        mobile:
          type: string
          title: Mobil
          maxLength: 200
        street:
          type: string
          title: Straße
          maxLength: 200
        zip_code:
          type: string
          title: PLZ
          maxLength: 200
        city:
          type: string
          title: Stadt / Ort
          maxLength: 200
        notes:
          type: string
          title: Bemerkungen
        children:
          type: array
          items:
            type: integer
    PatchedQualificationRequest:
      type: object
      description: Serializer für Qualifikationen
      properties:
        type:
          type: integer
          title: Qualifikationstyp
        user:
          type: integer
          nullable: true
          title: Benutzer
        member:
          type: integer
          nullable: true
          title: Mitglied
        date_acquired:
          type: string
          format: date
          title: Erworben am
          description: Datum des Erwerbs der Qualifikation
        date_expires:
          type: string
          format: date
          nullable: true
          title: Läuft ab am
          description: Ablaufdatum (falls erforderlich)
        issued_by:
          type: string
          title: Ausgestellt von
          description: Organisation oder Person, die die Qualifikation ausgestellt
            hat
          maxLength: 200
        note:
          type: string
          title: Notiz
    PatchedQualificationTypeRequest:
      type: object
      description: Serializer für Qualifikationstypen
      properties:
        name:
          type: string
          minLength: 1
          description: z.B. 'Grundlehrgang', 'Sprechfunk'
          maxLength: 200
        expires:
          type: boolean
          title: Läuft ab
          description: Wenn aktiviert, ist ein Ablaufdatum erforderlich
        validity_period:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          title: Gültigkeitsdauer (Monate)
          description: Standarddauer in Monaten (nur wenn 'Läuft ab' aktiviert ist)
        description:
          type: string
          title: Beschreibung
    PatchedServiceRequest:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          title: Ende
        place:
          type: string
          nullable: true
          title: Ort
          maxLength: 255
        topic:
          type: string
          nullable: true
          title: Thema
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Beschreibung
        events:
          type: string
          nullable: true
          title: Besondere Vorkommnisse
        operations_manager:
          type: array
          items:
            type: integer
            title: Übungsleitung
          title: Übungsleitung
    PatchedSpecialTaskRequest:
      type: object
      description: Serializer für Sonderaufgaben
      properties:
        task:
          type: integer
          title: Aufgabe
        user:
          type: integer
          nullable: true
          title: Benutzer
        member:
          type: integer
          nullable: true
          title: Mitglied
        start_date:
          type: string
          format: date
          title: Startdatum
          description: Datum des Beginns der Aufgabe
        end_date:
          type: string
          format: date
          nullable: true
          title: Enddatum
          description: Datum des Endes der Aufgabe (leer = noch aktiv)
        note:
          type: string
          title: Notiz
    PatchedSpecialTaskTypeRequest:
      type: object
      description: Serializer für Sonderaufgaben-Typen
      properties:
        name:
          type: string
          minLength: 1
          description: z.B. 'Jugendsprecher', 'Kleiderwart'
          maxLength: 200
        description:
          type: string
          title: Beschreibung
    PatchedStatusRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Mitgliedschaftsstatus
          maxLength: 200
        color:
          type: string
          minLength: 1
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
    PatchedStorageLocationRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        parent:
          type: integer
          nullable: true
          title: Übergeordneter Lagerort
          description: Übergeordneter Lagerort für hierarchische Struktur
        is_member:
          type: boolean
          title: Ist Mitglied
          description: Markiert diesen Ort als Mitglied-Lagerort
        member:
          type: integer
          nullable: true
          title: Mitglied
          description: Verknüpftes Mitglied, falls is_member=True
    PatchedTransactionRequest:
      type: object
      properties:
        transaction_type:
          allOf:
          - $ref: '#/components/schemas/TransactionTypeEnum'
          title: Transaktionstyp
        item:
          type: integer
          nullable: true
          title: Artikel
        item_variant:
          type: integer
          nullable: true
          title: Artikel-Variante
        source:
          type: integer
          nullable: true
          title: Quelle
        target:
          type: integer
          nullable: true
          title: Ziel
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Menge
        note:
          type: string
          title: Notiz
    PatchedUserRequest:
      type: object
      description: Basic user serializer for lists
      properties:
        email:
          type: string
          format: email
          title: E-Mail-Adresse
          maxLength: 254
        first_name:
          type: string
          title: Vorname
          maxLength: 150
        last_name:
          type: string
          title: Nachname
          maxLength: 150
        is_staff:
          type: boolean
          title: Mitarbeiter-Status
          description: Legt fest, ob sich der Benutzer an der Administrationsseite
            anmelden kann.
        is_active:
          type: boolean
          title: Aktiv
          description: Legt fest, ob dieser Benutzer aktiv ist. Kann deaktiviert werden,
            anstatt Benutzer zu löschen.
    Qualification:
      type: object
      description: Serializer für Qualifikationen
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: integer
          title: Qualifikationstyp
        type_name:
          type: string
          readOnly: true
        user:
          type: integer
          nullable: true
          title: Benutzer
        user_name:
          type: string
          readOnly: true
        member:
          type: integer
          nullable: true
          title: Mitglied
        member_name:
          type: string
          readOnly: true
        date_acquired:
          type: string
          format: date
          title: Erworben am
          description: Datum des Erwerbs der Qualifikation
        date_expires:
          type: string
          format: date
          nullable: true
          title: Läuft ab am
          description: Ablaufdatum (falls erforderlich)
        issued_by:
          type: string
          title: Ausgestellt von
          description: Organisation oder Person, die die Qualifikation ausgestellt
            hat
          maxLength: 200
        note:
          type: string
          title: Notiz
      required:
      - date_acquired
      - id
      - member_name
      - type
      - type_name
      - user_name
    QualificationRequest:
      type: object
      description: Serializer für Qualifikationen
      properties:
        type:
          type: integer
          title: Qualifikationstyp
        user:
          type: integer
          nullable: true
          title: Benutzer
        member:
          type: integer
          nullable: true
          title: Mitglied
        date_acquired:
          type: string
          format: date
          title: Erworben am
          description: Datum des Erwerbs der Qualifikation
        date_expires:
          type: string
          format: date
          nullable: true
          title: Läuft ab am
          description: Ablaufdatum (falls erforderlich)
        issued_by:
          type: string
          title: Ausgestellt von
          description: Organisation oder Person, die die Qualifikation ausgestellt
            hat
          maxLength: 200
        note:
          type: string
          title: Notiz
      required:
      - date_acquired
      - type
    QualificationType:
      type: object
      description: Serializer für Qualifikationstypen
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: z.B. 'Grundlehrgang', 'Sprechfunk'
          maxLength: 200
        expires:
          type: boolean
          title: Läuft ab
          description: Wenn aktiviert, ist ein Ablaufdatum erforderlich
        validity_period:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          title: Gültigkeitsdauer (Monate)
          description: Standarddauer in Monaten (nur wenn 'Läuft ab' aktiviert ist)
        description:
          type: string
          title: Beschreibung
      required:
      - id
      - name
    QualificationTypeRequest:
      type: object
      description: Serializer für Qualifikationstypen
      properties:
        name:
          type: string
          minLength: 1
          description: z.B. 'Grundlehrgang', 'Sprechfunk'
          maxLength: 200
        expires:
          type: boolean
          title: Läuft ab
          description: Wenn aktiviert, ist ein Ablaufdatum erforderlich
        validity_period:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          title: Gültigkeitsdauer (Monate)
          description: Standarddauer in Monaten (nur wenn 'Läuft ab' aktiviert ist)
        description:
          type: string
          title: Beschreibung
      required:
      - name
    Service:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          title: Ende
        place:
          type: string
          nullable: true
          title: Ort
          maxLength: 255
        topic:
          type: string
          nullable: true
          title: Thema
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Beschreibung
        events:
          type: string
          nullable: true
          title: Besondere Vorkommnisse
        operations_manager:
          type: array
          items:
            type: integer
            title: Übungsleitung
          title: Übungsleitung
        attendees:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - attendees
      - end
      - id
      - start
    ServiceRequest:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          title: Ende
        place:
          type: string
          nullable: true
          title: Ort
          maxLength: 255
        topic:
          type: string
          nullable: true
          title: Thema
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Beschreibung
        events:
          type: string
          nullable: true
          title: Besondere Vorkommnisse
        operations_manager:
          type: array
          items:
            type: integer
            title: Übungsleitung
          title: Übungsleitung
      required:
      - end
      - start
    SpecialTask:
      type: object
      description: Serializer für Sonderaufgaben
      properties:
        id:
          type: integer
          readOnly: true
        task:
          type: integer
          title: Aufgabe
        task_name:
          type: string
          readOnly: true
        user:
          type: integer
          nullable: true
          title: Benutzer
        user_name:
          type: string
          readOnly: true
        member:
          type: integer
          nullable: true
          title: Mitglied
        member_name:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
          title: Startdatum
          description: Datum des Beginns der Aufgabe
        end_date:
          type: string
          format: date
          nullable: true
          title: Enddatum
          description: Datum des Endes der Aufgabe (leer = noch aktiv)
        note:
          type: string
          title: Notiz
      required:
      - id
      - member_name
      - start_date
      - task
      - task_name
      - user_name
    SpecialTaskRequest:
      type: object
      description: Serializer für Sonderaufgaben
      properties:
        task:
          type: integer
          title: Aufgabe
        user:
          type: integer
          nullable: true
          title: Benutzer
        member:
          type: integer
          nullable: true
          title: Mitglied
        start_date:
          type: string
          format: date
          title: Startdatum
          description: Datum des Beginns der Aufgabe
        end_date:
          type: string
          format: date
          nullable: true
          title: Enddatum
          description: Datum des Endes der Aufgabe (leer = noch aktiv)
        note:
          type: string
          title: Notiz
      required:
      - start_date
      - task
    SpecialTaskType:
      type: object
      description: Serializer für Sonderaufgaben-Typen
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: z.B. 'Jugendsprecher', 'Kleiderwart'
          maxLength: 200
        description:
          type: string
          title: Beschreibung
      required:
      - id
      - name
    SpecialTaskTypeRequest:
      type: object
      description: Serializer für Sonderaufgaben-Typen
      properties:
        name:
          type: string
          minLength: 1
          description: z.B. 'Jugendsprecher', 'Kleiderwart'
          maxLength: 200
        description:
          type: string
          title: Beschreibung
      required:
      - name
    StateEnum:
      enum:
      - A
      - E
      - F
      type: string
      description: |-
        * `A` - Anwesend
        * `E` - Entschuldigt
        * `F` - Fehlend
    Status:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Mitgliedschaftsstatus
          maxLength: 200
        color:
          type: string
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
      required:
      - id
    StatusRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Mitgliedschaftsstatus
          maxLength: 200
        color:
          type: string
          minLength: 1
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
    Stock:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        item:
          type: integer
          nullable: true
          title: Artikel
        item_name:
          type: string
          readOnly: true
        item_variant:
          type: integer
          nullable: true
          title: Artikel-Variante
        variant_display:
          type: string
          readOnly: true
        location:
          type: integer
          title: Lagerort
        location_name:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Menge
        category_id:
          type: string
          readOnly: true
      required:
      - category_id
      - id
      - item_name
      - location
      - location_name
      - variant_display
    StorageLocation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        parent:
          type: integer
          nullable: true
          title: Übergeordneter Lagerort
          description: Übergeordneter Lagerort für hierarchische Struktur
        parent_name:
          type: string
          readOnly: true
        is_member:
          type: boolean
          title: Ist Mitglied
          description: Markiert diesen Ort als Mitglied-Lagerort
        member:
          type: integer
          nullable: true
          title: Mitglied
          description: Verknüpftes Mitglied, falls is_member=True
        full_path:
          type: string
          readOnly: true
      required:
      - full_path
      - id
      - name
      - parent_name
    StorageLocationRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        parent:
          type: integer
          nullable: true
          title: Übergeordneter Lagerort
          description: Übergeordneter Lagerort für hierarchische Struktur
        is_member:
          type: boolean
          title: Ist Mitglied
          description: Markiert diesen Ort als Mitglied-Lagerort
        member:
          type: integer
          nullable: true
          title: Mitglied
          description: Verknüpftes Mitglied, falls is_member=True
      required:
      - name
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    Transaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        transaction_type:
          allOf:
          - $ref: '#/components/schemas/TransactionTypeEnum'
          title: Transaktionstyp
        item:
          type: integer
          nullable: true
          title: Artikel
        item_variant:
          type: integer
          nullable: true
          title: Artikel-Variante
        source:
          type: integer
          nullable: true
          title: Quelle
        target:
          type: integer
          nullable: true
          title: Ziel
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Menge
        date:
          type: string
          format: date-time
          readOnly: true
          title: Datum
        note:
          type: string
          title: Notiz
        user:
          type: integer
          readOnly: true
          nullable: true
          title: Benutzer
        item_name:
          type: string
          readOnly: true
        source_name:
          type: string
          readOnly: true
        target_name:
          type: string
          readOnly: true
        user_username:
          type: string
          readOnly: true
      required:
      - date
      - id
      - item_name
      - quantity
      - source_name
      - target_name
      - transaction_type
      - user
      - user_username
    TransactionRequest:
      type: object
      properties:
        transaction_type:
          allOf:
          - $ref: '#/components/schemas/TransactionTypeEnum'
          title: Transaktionstyp
        item:
          type: integer
          nullable: true
          title: Artikel
        item_variant:
          type: integer
          nullable: true
          title: Artikel-Variante
        source:
          type: integer
          nullable: true
          title: Quelle
        target:
          type: integer
          nullable: true
          title: Ziel
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Menge
        note:
          type: string
          title: Notiz
      required:
      - quantity
      - transaction_type
    TransactionTypeEnum:
      enum:
      - IN
      - OUT
      - MOVE
      - LOAN
      - RETURN
      - DISCARD
      type: string
      description: |-
        * `IN` - Eingang
        * `OUT` - Ausgang
        * `MOVE` - Umlagerung
        * `LOAN` - Ausleihe
        * `RETURN` - Rückgabe
        * `DISCARD` - Aussortierung
    User:
      type: object
      description: Basic user serializer for lists
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          title: Benutzername
          description: Erforderlich. 150 Zeichen oder weniger. Nur Buchstaben, Ziffern
            und @/./+/-/_.
        email:
          type: string
          format: email
          title: E-Mail-Adresse
          maxLength: 254
        first_name:
          type: string
          title: Vorname
          maxLength: 150
        last_name:
          type: string
          title: Nachname
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        is_staff:
          type: boolean
          title: Mitarbeiter-Status
          description: Legt fest, ob sich der Benutzer an der Administrationsseite
            anmelden kann.
        is_active:
          type: boolean
          title: Aktiv
          description: Legt fest, ob dieser Benutzer aktiv ist. Kann deaktiviert werden,
            anstatt Benutzer zu löschen.
        avatar_url:
          type: string
          readOnly: true
      required:
      - avatar_url
      - full_name
      - id
      - username
    UserInfo:
      type: object
      description: Complete user information including permissions
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          title: Benutzername
          description: Erforderlich. 150 Zeichen oder weniger. Nur Buchstaben, Ziffern
            und @/./+/-/_.
        email:
          type: string
          format: email
          title: E-Mail-Adresse
          maxLength: 254
        first_name:
          type: string
          title: Vorname
          maxLength: 150
        last_name:
          type: string
          title: Nachname
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        phone:
          type: string
          maxLength: 128
        mobile_phone:
          type: string
          maxLength: 128
        street:
          type: string
          maxLength: 200
        zip_code:
          type: string
          maxLength: 200
        city:
          type: string
          maxLength: 200
        is_staff:
          type: boolean
          readOnly: true
          title: Mitarbeiter-Status
          description: Legt fest, ob sich der Benutzer an der Administrationsseite
            anmelden kann.
        is_active:
          type: boolean
          title: Aktiv
          description: Legt fest, ob dieser Benutzer aktiv ist. Kann deaktiviert werden,
            anstatt Benutzer zu löschen.
        is_superuser:
          type: boolean
          readOnly: true
          title: Administrator-Status
          description: Legt fest, dass der Benutzer alle Berechtigungen hat, ohne
            diese einzeln zuweisen zu müssen.
        date_joined:
          type: string
          format: date-time
          readOnly: true
          title: Mitglied seit
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Letzte Anmeldung
        avatar:
          type: string
          format: uri
        avatar_url:
          type: string
          readOnly: true
        dsgvo_internal:
          type: boolean
        dsgvo_external:
          type: boolean
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          readOnly: true
        permissions:
          type: string
          readOnly: true
      required:
      - avatar_url
      - date_joined
      - full_name
      - groups
      - id
      - is_staff
      - is_superuser
      - last_login
      - permissions
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
